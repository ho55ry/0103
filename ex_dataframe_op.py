# -----------------------------------------------------------------------------------------------
# Series 데이터 연산 수행
# 브로드캐스트(Broadcast) : 연산 수행되는 SR/DF와 동일 크기로 확장되어 연산 수행됨
# -----------------------------------------------------------------------------------------------
import pandas as pd

# SR 객체 생성 ----------------------------------------------------------------------------------
sr1=pd.Series([11,12,13,14,15])
print(sr1)

# 연산 수행 - (1) Series 연산자 숫자 --------------------------------------------------------------
sr2=sr1+10 # 10이 sr1크기만큼 확장되어 각각 10씩 더해줌
print(f'sr1+10 => \n{sr2}',end='\n\n') 
sr2=sr1-10; print(f'sr1-10 => \n{sr2}',end='\n\n') 
sr2=sr1*10; print(f'sr1*10 => \n{sr2}',end='\n\n') 
sr2=sr1/10; print(f'sr1/10 => \n{sr2}',end='\n\n') # // , % 등등 가능 

sr2=sr1>=13                              # 비교연산도 가능
print(f'sr1>=13 => \n{sr2}',end='\n\n') 
sr2=sr1!=13
print(f'sr1!=13 => \n{sr2}',end='\n\n') 


# 연산 수행 - (2) Series 연산자 Series -------------------------------------------------------------
sr3=pd.Series([7,7,7])
sr4=sr1+sr3     # int + int 인데 왜 결과값 float?
print(sr4) # idx3,4는 더할게 없어서 NaN

sr4=sr1[[0,1,2]]-sr3
print(sr4)

sr4=sr1[[0,1,2]]>=sr3
print(sr4)

# 연산 수행 - (3) Series.연산메서드(Series) ---------------------------------------------------------
# 빈 데이터를 값을 채운 (fill_value 매개변수) 후 연산 가능
sr4=sr1.add(sr3,fill_value=0)   # int + int 인데 왜 결과값 float?
print(sr4)

sr4=sr1.mul(sr1,fill_value=1)
print(f'sr1.mul(sr3) = > \n {sr4}')